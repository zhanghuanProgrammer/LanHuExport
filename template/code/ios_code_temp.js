


//------------------- iOS代码 模块 -------------------

;(function () {

    document.writeln('<script type=\"text/x-tmpl\" id=\"tmpl-ios-code-views\">');
    document.writeln('');
    document.writeln('{% for (var i=0; i<o.root.length; i++) { %}');
    document.writeln('    {% var tempView = o.root[i]; %}');
    document.writeln('    {% var fatherView = o[\"fatherView\"]; %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"label\") { %}');
    document.writeln('    UILabel *{%=tempView.defineName %} = ({');
    document.writeln('    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.text) { %}label.text = @\"{%=tempView.text %}\";{% } %}');
    document.writeln('    label.font = {% if (tempView.font_family) { %}[UIFont fontWithName:@\"{%=tempView.font_family %}\" size:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } else { %}[UIFont systemFontSize:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } %}');
    document.writeln('    {% if (tempView.align) { %}');
    document.writeln('    {% if (tempView.align == \"default\") { %}label.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"left\") { %}label.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"right\") { %}label.textAlignment = NSTextAlignmentRight;{% } %}');
    document.writeln('    {% if (tempView.align == \"center\") { %}label.textAlignment = NSTextAlignmentCenter;{% } %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.textColor) { %}');
    document.writeln('    label.textColor = [UIColor colorWithRed:{% if (tempView.textColorRed) { %}{%=tempView.textColorRed %}{% } else { %}1{% } %} green:{% if (tempView.textColorGreen) { %}{%=tempView.textColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.textColorBlue) { %}{%=tempView.textColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.textColorAlpha) { %}{%=tempView.textColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.textColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    label.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}label.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}label.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}label.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    label.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:label]; {% } %}');
    document.writeln('    label;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"switch\") { %}');
    document.writeln('UISwitch *{%=tempView.defineName %} = ({');
    document.writeln('    UISwitch *switch = [[UISwitch alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    switch.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}switch.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}switch.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}switch.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    switch.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:switch]; {% } %}');
    document.writeln('    switch;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"scrollView\") { %}');
    document.writeln('UIScrollView *{%=tempView.defineName %} = ({');
    document.writeln('    UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    scrollView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}scrollView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}scrollView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}scrollView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    scrollView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:scrollView]; {% } %}');
    document.writeln('    scrollView;');
    document.writeln('    });');
    document.writeln('    {% if (tempView.views) { %}');
    document.writeln('    {% var templateViewsValue = get_template();var map = {};map[\"root\"] = tempView.views;map[\"fatherView\"] = tempView.defineName; var ret = tmpl(templateViewsValue, map); %}');
    document.writeln('    {% if(ret) { %}');
    document.writeln('    {%=ret%}');
    document.writeln('    {% } %}');
    document.writeln('    {% } %}');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"textField\") { %}');
    document.writeln('UITextField *{%=tempView.defineName %} = ({');
    document.writeln('    UITextField *textField = [[UITextField alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.text) { %}textField.text = @\"{%=tempView.text %}\";{% } %}');
    document.writeln('    textField.font = {% if (tempView.font_family) { %}[UIFont fontWithName:@\"{%=tempView.font_family %}\" size:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } else { %}[UIFont systemFontSize:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } %}');
    document.writeln('    {% if (tempView.align) { %}');
    document.writeln('    {% if (tempView.align == \"default\") { %}textField.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"left\") { %}textField.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"right\") { %}textField.textAlignment = NSTextAlignmentRight;{% } %}');
    document.writeln('    {% if (tempView.align == \"center\") { %}textField.textAlignment = NSTextAlignmentCenter;{% } %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.textColor) { %}');
    document.writeln('    textField.textColor = [UIColor colorWithRed:{% if (tempView.textColorRed) { %}{%=tempView.textColorRed %}{% } else { %}1{% } %} green:{% if (tempView.textColorGreen) { %}{%=tempView.textColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.textColorBlue) { %}{%=tempView.textColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.textColorAlpha) { %}{%=tempView.textColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.textColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    textField.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}textField.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}textField.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}textField.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    textField.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:textField]; {% } %}');
    document.writeln('    textField;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"textView\") { %}');
    document.writeln('UITextView *{%=tempView.defineName %} = ({');
    document.writeln('    UITextView *textView = [[UITextView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.text) { %}textView.text = @\"{%=tempView.text %}\";{% } %}');
    document.writeln('    textView.font = {% if (tempView.font_family) { %}[UIFont fontWithName:@\"{%=tempView.font_family %}\" size:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } else { %}[UIFont systemFontSize:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } %}');
    document.writeln('    {% if (tempView.align) { %}');
    document.writeln('    {% if (tempView.align == \"default\") { %}textView.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"left\") { %}textView.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"right\") { %}textView.textAlignment = NSTextAlignmentRight;{% } %}');
    document.writeln('    {% if (tempView.align == \"center\") { %}textView.textAlignment = NSTextAlignmentCenter;{% } %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.textColor) { %}');
    document.writeln('    textView.textColor = [UIColor colorWithRed:{% if (tempView.textColorRed) { %}{%=tempView.textColorRed %}{% } else { %}1{% } %} green:{% if (tempView.textColorGreen) { %}{%=tempView.textColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.textColorBlue) { %}{%=tempView.textColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.textColorAlpha) { %}{%=tempView.textColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.textColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    textView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}textView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}textView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}textView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    textView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:textView]; {% } %}');
    document.writeln('    textView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"imageView\") { %}');
    document.writeln('UIImageView *{%=tempView.defineName %} = ({');
    document.writeln('    UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.image) { %}imageView.image = [UIImage imageNamed:@\"{%=tempView.image %}\"];{% } %}');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    imageView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}imageView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}imageView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}imageView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    imageView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:imageView]; {% } %}');
    document.writeln('    imageView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"activityIndicatorView\") { %}');
    document.writeln('UIActivityIndicatorView *{%=tempView.defineName %} = ({');
    document.writeln('    UIActivityIndicatorView *activityIndicatorView = [[UIActivityIndicatorView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    activityIndicatorView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}activityIndicatorView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}activityIndicatorView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}activityIndicatorView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    activityIndicatorView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:activityIndicatorView]; {% } %}');
    document.writeln('    activityIndicatorView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"button\") { %}');
    document.writeln('UIButton *{%=tempView.defineName %} = ({');
    document.writeln('    UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];');
    document.writeln('    button.frame = CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %});');
    document.writeln('    {% if (tempView.text) { %}[button setTitle:@\"{%=tempView.text %}\" forState:UIControlStateNormal];{% } %}');
    document.writeln('    button.titleLabel.font = {% if (tempView.font_family) { %}[UIFont fontWithName:@\"{%=tempView.font_family %}\" size:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } else { %}[UIFont systemFontSize:{% if (tempView.font) { %}{%=tempView.font %}{% } else { %}14{% } %}];{% } %}');
    document.writeln('    {% if (tempView.align) { %}');
    document.writeln('    {% if (tempView.align == \"default\") { %}button.titleLabel.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"left\") { %}button.titleLabel.textAlignment = NSTextAlignmentLeft;{% } %}');
    document.writeln('    {% if (tempView.align == \"right\") { %}button.titleLabel.textAlignment = NSTextAlignmentRight;{% } %}');
    document.writeln('    {% if (tempView.align == \"center\") { %}button.titleLabel.textAlignment = NSTextAlignmentCenter;{% } %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.textColor) { %}');
    document.writeln('    [button setTitleColor:[UIColor colorWithRed:{% if (tempView.textColorRed) { %}{%=tempView.textColorRed %}{% } else { %}1{% } %} green:{% if (tempView.textColorGreen) { %}{%=tempView.textColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.textColorBlue) { %}{%=tempView.textColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.textColorAlpha) { %}{%=tempView.textColorAlpha %}{% } else { %}1{% } %}]; forState:UIControlStateNormal];//{%=tempView.textColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    button.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}button.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}button.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}button.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    button.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:button]; {% } %}');
    document.writeln('    button;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"progressView\") { %}');
    document.writeln('    UIProgressView *{%=tempView.defineName %} = ({');
    document.writeln('    UIProgressView *progressView = [[UIProgressView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    progressView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}progressView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}progressView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}progressView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    progressView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:progressView]; {% } %}');
    document.writeln('    progressView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"tableView\") { %}');
    document.writeln('    UITableView *{%=tempView.defineName %} = ({');
    document.writeln('    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    tableView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}tableView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}tableView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}tableView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    tableView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:tableView]; {% } %}');
    document.writeln('    tableView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"collectionView\") { %}');
    document.writeln('    UICollectionView *{%=tempView.defineName %} = ({');
    document.writeln('    UICollectionView *collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    collectionView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}collectionView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}collectionView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}collectionView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    collectionView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:collectionView]; {% } %}');
    document.writeln('    collectionView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"stepper\") { %}');
    document.writeln('    UIStepper *{%=tempView.defineName %} = ({');
    document.writeln('    UIStepper *stepper = [[UIStepper alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    stepper.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}stepper.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}stepper.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}stepper.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    stepper.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:stepper]; {% } %}');
    document.writeln('    stepper;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"pageControl\") { %}');
    document.writeln('    UIPageControl *{%=tempView.defineName %} = ({');
    document.writeln('    UIPageControl *pageControl = [[UIPageControl alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    pageControl.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}pageControl.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}pageControl.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}pageControl.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    pageControl.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:pageControl]; {% } %}');
    document.writeln('    pageControl;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"pickerView\") { %}');
    document.writeln('    UIPickerView *{%=tempView.defineName %} = ({');
    document.writeln('    UIPickerView *pickerView = [[UIPickerView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    pickerView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}pickerView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}pickerView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}pickerView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    pickerView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:pickerView]; {% } %}');
    document.writeln('    pickerView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"datePicker\") { %}');
    document.writeln('    UIDatePicker *{%=tempView.defineName %} = ({');
    document.writeln('    UIDatePicker *datePicker = [[UIDatePicker alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    datePicker.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}datePicker.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}datePicker.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}datePicker.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    datePicker.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:datePicker]; {% } %}');
    document.writeln('    datePicker;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"mapView\") { %}');
    document.writeln('    UIMapView *{%=tempView.defineName %} = ({');
    document.writeln('    UIMapView *mapView = [[UIMapView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    mapView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}mapView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}mapView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}mapView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    mapView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:mapView]; {% } %}');
    document.writeln('    mapView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"searchBar\") { %}');
    document.writeln('    UISearchBar *{%=tempView.defineName %} = ({');
    document.writeln('    UISearchBar *searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    searchBar.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}searchBar.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}searchBar.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}searchBar.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    searchBar.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:searchBar]; {% } %}');
    document.writeln('    searchBar;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"webView\") { %}');
    document.writeln('    WKWebView *{%=tempView.defineName %} = ({');
    document.writeln('    WKWebView *webView = [[WKWebView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    webView.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}webView.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}webView.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}webView.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    webView.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:webView]; {% } %}');
    document.writeln('    webView;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"slider\") { %}');
    document.writeln('    UISlider *{%=tempView.defineName %} = ({');
    document.writeln('    UISlider *slider = [[UISlider alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    slider.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}slider.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}slider.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}slider.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    slider.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:slider]; {% } %}');
    document.writeln('    slider;');
    document.writeln('    });');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% if (tempView.viewType == \"view\") { %}');
    document.writeln('    UIView *{%=tempView.defineName %} = ({');
    document.writeln('    UIView *view = [[UIView alloc] initWithFrame:CGRectMake({%=tempView.x %}, {%=tempView.y %}, {%=tempView.width %}, {%=tempView.height %})];');
    document.writeln('    {% if (tempView.bgColor) { %}');
    document.writeln('    view.backgroundColor = [UIColor colorWithRed:{% if (tempView.bgColorRed) { %}{%=tempView.bgColorRed %}{% } else { %}1{% } %} green:{% if (tempView.bgColorGreen) { %}{%=tempView.bgColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.bgColorBlue) { %}{%=tempView.bgColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.bgColorAlpha) { %}{%=tempView.bgColorAlpha %}{% } else { %}1{% } %}];//{%=tempView.bgColor %}');
    document.writeln('    {% } %}');
    document.writeln('    {% if (tempView.border_radius || tempView.border_width) { %}');
    document.writeln('    {% if (tempView.border_radius) { %}view.layer.cornerRadius = {%=tempView.border_radius%};{% } %}');
    document.writeln('    {% if (tempView.borderColorRed) { %}view.layer.borderColor = [[UIColor colorWithRed:{% if (tempView.borderColorRed) { %}{%=tempView.borderColorRed %}{% } else { %}1{% } %} green:{% if (tempView.borderColorGreen) { %}{%=tempView.borderColorGreen %}{% } else { %}1{% } %} blue:{% if (tempView.borderColorBlue) { %}{%=tempView.borderColorBlue %}{% } else { %}1{% } %} alpha:{% if (tempView.borderColorAlpha) { %}{%=tempView.borderColorAlpha %}{% } else { %}1{% } %}] CGColor];//{%=tempView.borderColor %}{% } %}');
    document.writeln('    {% if (tempView.border_width) { %}view.layer.borderWidth = {%=tempView.border_width%};{% } %}');
    document.writeln('    view.layer.masksToBounds = YES;');
    document.writeln('    {% } %}');
    document.writeln('    {% if (fatherView && fatherView.length > 0) { %} [{%=fatherView %} addSubview:view]; {% } %}');
    document.writeln('    view;');
    document.writeln('    });');
    document.writeln('    {% if (tempView.views) { %}');
    document.writeln('    {% var templateViewsValue = get_template();var map = {};map[\"root\"] = tempView.views;map[\"fatherView\"] = tempView.defineName; var ret = tmpl(templateViewsValue, map); %}');
    document.writeln('    {% if(ret) { %}');
    document.writeln('    {%=ret%}');
    document.writeln('    {% } %}');
    document.writeln('    {% } %}');
    document.writeln('');
    document.writeln('');
    document.writeln('    {% } %}');
    document.writeln('    {% } %}');
    document.writeln('</script>');
  
})(this);

//------------------- iOS代码模板 模块 -------------------



